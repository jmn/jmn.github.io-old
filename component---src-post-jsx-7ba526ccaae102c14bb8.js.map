{"version":3,"sources":["webpack:///./src/post.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","_ref","post","data","markdownRemark","a","createElement","style","margin","maxWidth","title","frontmatter","keywords","tags","color","fontSize","fields","date","dangerouslySetInnerHTML","__html","html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-post-jsx-7ba526ccaae102c14bb8.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"./components/seo\";\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  return (\n    <div style={{ margin: `1rem auto`, maxWidth: 600 }}>\n      <SEO title={post.frontmatter.title} keywords={post.frontmatter.tags} />\n      <h1>{post.frontmatter.title}</h1>\n      <h4 style={{ color: \"rgb(165, 164, 164)\" }}>\n        <span style={{ fontSize: \"0.8em\" }}>{post.fields.date}</span>\n      </h4>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n      fields {\n        date\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}