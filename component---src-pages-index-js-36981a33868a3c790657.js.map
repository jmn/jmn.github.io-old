{"version":3,"sources":["webpack:///./src/components/Search.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Search","props","_this","_Component","call","this","getOrCreateIndex","index","Index","load","data","siteSearchIndex","search","evt","query","target","value","setState","results","map","_ref","ref","documentStore","getDoc","state","render","react_default","a","createElement","type","onChange","page","title","keywords","join","Component","__webpack_require__","d","__webpack_exports__","pages_query","IndexPage","console","log","style","margin","maxWidth","Search_Search","allMarkdownRemark","edges","_ref2","node","key","id","className","gatsby_browser_entry","to","fields","slug","textDecoration","color","frontmatter","date","timeToRead","excerpt","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-36981a33868a3c790657.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Index } from \"elasticlunr\";\n\n// Graphql query used to retrieve the serialized search index.\nexport const query = graphql`\n  query SearchIndexExampleQuery {\n    siteSearchIndex {\n      index\n    }\n  }\n`;\n\n// Search component\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: ``,\n      results: []\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.query} onChange={this.search} />\n        <ul>\n          {this.state.results.map(page => (\n            <li>\n              {page.title}: {page.keywords.join(`,`)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  getOrCreateIndex = () =>\n    this.index\n      ? this.index\n      : // Create an elastic lunr index and hydrate with graphql query results\n        Index.load(this.props.data.siteSearchIndex.index);\n\n  search = evt => {\n    const query = evt.target.value;\n    this.index = this.getOrCreateIndex();\n    this.setState({\n      query,\n      // Query the index with search string to get an [] of IDs\n      results: this.index\n        .search(query)\n        // Map over each ID and return the full document\n        .map(({ ref }) => this.index.documentStore.getDoc(ref))\n    });\n  };\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport Search from \"../components/Search\";\n\n/*\nimport Layout from '../components/layout'\nimport Image from '../components/image'\nimport SEO from '../components/seo' */\n\n/* const IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n      <Image />\n    </div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n */\nconst IndexPage = ({ data }) => {\n  console.log(data);\n  return (\n    <div style={{ margin: `3rem auto`, maxWidth: 600 }}>\n      <h1>jmn's blog</h1>\n      <Search />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id} className=\"article-box\">\n          <Link\n            to={node.fields.slug}\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\n          >\n            <h3 className=\"title\">{node.frontmatter.title}</h3>\n          </Link>\n          <p className=\"date\">\n            {node.fields.date}, {node.timeToRead} min read\n          </p>\n          <p className=\"excerpt\">{node.excerpt}</p>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [fields___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}